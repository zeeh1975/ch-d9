// Selecciona la base de datos
use ecommerce

// Crear las colecciones
db.createCollection('mensajes')
db.createCollection('productos')

// Agregar 10 documentos con valores distintos a las colecciones mensajes y productos
db.mensajes.insert([{email: "persona1@mail.com", fechahora: "2022/07/14 13:25", mensaje:"mensaje1"},{email: "persona2@mail.com", fechahora: "2022/07/15 13:26", mensaje:"mensaje2"},{email: "persona3@mail.com", fechahora: "2022/07/16 13:27", mensaje:"mensaje3"},{email: "persona4@mail.com", fechahora: "2022/07/17 13:28", mensaje:"mensaje4"},{email: "persona5@mail.com", fechahora: "2022/07/18 13:29", mensaje:"mensaje5"},{email: "persona6@mail.com", fechahora: "2022/07/19 13:30", mensaje:"mensaje6"},{email: "persona7@mail.com", fechahora: "2022/07/20 13:31", mensaje:"mensaje7"},{email: "persona8@mail.com", fechahora: "2022/07/21 13:32", mensaje:"mensaje8"},{email: "persona9@mail.com", fechahora: "2022/07/22 13:33", mensaje:"mensaje9"},{email: "persona10@mail.com", fechahora: "2022/07/23 13:34", mensaje:"mensaje10"}])
db.productos.insert([{"title":"Producto1","price":3350,"thumbnail":"foto1.png","id":1},{"title":"Producto2","price":580,"thumbnail":"foto2.png","id":2},{"title":"Producto3","price":4320,"thumbnail":"foto3.png","id":3},{"title":"Producto4","price":1280,"thumbnail":"foto4.png","id":4},{"title":"Producto5","price":4990,"thumbnail":"foto5.png","id":5},{"title":"Producto6","price":2300,"thumbnail":"foto6.png","id":6},{"title":"Producto7","price":2860,"thumbnail":"foto7.png","id":7},{"title":"Producto8","price":1700,"thumbnail":"foto8.png","id":8},{"title":"Producto9","price":120,"thumbnail":"foto9.png","id":9},{"title":"Producto10","price":900,"thumbnail":"foto10.png","id":10}])

// Listar todos los documentos en cada colección.
db.mensajes.find()
db.productos.find()

// Mostrar la cantidad de documentos almacenados en cada una de ellas.
db.mensajes.estimatedDocumentCount()
db.productos.estimatedDocumentCount()

// Agregar un producto más en la colección de productos 
db.productos.insert([{"title":"Producto11","price":780,"thumbnail":"foto11.png","id":11}])

// Listar los productos con precio menor a 1000 pesos.
db.productos.find({"price": {$lt: 1000}})

// Listar los productos con precio entre los 1000 a 3000 pesos.
db.productos.find({$and: [{price: {$gt: 1000}}, {price: {$lt: 3000}}]})

// Listar los productos con precio mayor a 3000 pesos.
db.productos.find({"price": {$gt: 3000}})

// Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
db.productos.findOne({},{title: 1}).sort({"price": 1}).skip(2).limit(1)

// Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
db.productos.updateMany({}, {$set: {stock: 100}}, false, true)

// Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
db.productos.updateMany({price: {$gt: 4000}}, {$set: {stock: 0}})

// Borrar los productos con precio menor a 1000 pesos.
db.productos.deleteMany({price: {$lt: 1000}})

// Aclaración sobre autenticación, para que el control de usuario funcione 
// el servidor debe tener la autenticacion habilitada (parametro --auth)
// y debe haber un usuario root, de otra manera el servidor permite todas 
// las operaciones por mas que se haya restringido al usuario
// Al acceder un servidor no autenticado el cliente muestra la siguiente 
// advertencia:
// Access control is not enabled for the database. Read and write access 
// to data and configuration is unrestricted
// La base de datos incluida ya tiene el usuario root, asi que para replicar
// el error anterior del usuario pepe bastaria con ejecutar el servidor con
// el parametro --auth (o usar server_auth.bat)

// Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. 
use admin
db.createUser({user: "pepe", pwd:"asd456",roles: [{ role: "read", db: "ecommerce" }]})

// Verificar que pepe no pueda cambiar la información.
// usar en el shell el siguiente comando (o usar client_pepe.bat): 
//   mongo -u pepe -p "asd456"
// ya en mongo utilizar este comando: 

use ecommerce
db.productos.insert([{"title":"Producto12","price":880,"thumbnail":"foto12.png","id":12}])

// que debe presentar el siguiente mensaje de error:
// WriteCommandError({ "ok" : 0,
//         "errmsg" : "not authorized on ecommerce to execute command { insert: \"productos\", ordered: true, lsid: { id: UUID(\"a510c98f-f858-4038-800b-77debda63680\") }, $db: \"ecommerce\" }",
//         "code" : 13, "codeName" : "Unauthorized" })
// 
